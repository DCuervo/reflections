When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository should be used when there are multiple physical 
    locations from which the file(s) in the repository will be changed and 
    updated.  This could be when one user makes changes from different 
    computers, such as a work and home computer, or when multiple users are 
    working on one project together, such as changing the same code or adding 
    more files to the repository.  This allows the repository to become more 
    accessible by anyone who has permission from anywhere, and will update any 
    changes for everyone involved.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Being able to manually pull from the GitHub remote repository allows 
	the user to know how up-to-date the local repository is.  If Git 
	automatically performed a pull to stay up-to-date, the local 
	repository would change without the user knowing which updates 
	occurred, and maybe even without knowing that it was updated at all.  
	If the user is working on a file and stops, the automatic update may 
	change the work on the local repository and lose the information, 
	essentially reverting it back to a previous version.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are entire copies of a repository executed completely on GitHub.  
	It creates a copy which the new user can work on without making any 
	changes to the original repository.  Clones are also copies, but do not 
	have to be involved with GitHub at all.  Any public repository on the 
	internet, whether on GitHub or another website, can be cloned to a local 
	directory to be worked on.  A branch is also a copy, which can occur in 
	either a local or a GitHub repository.  A branch is a deviation from a 
	set commit which allows new changes that do not affect another separate 
	branch with its own changes.  A fork is best used when making a copy of a 
	repository on GitHub to work on it without changing the original if the 
	original author has not given permission.  A clone is used to create a 
	working copy on the local machine to work on if a larger project or 
	program is need.  Branches are best for creating different versions 
	individual purposes and updating them simultaneously without damaging any 
	working version.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
